@using System.Collections.Generic
@using Microsoft.AspNet.Http
@using Microsoft.AspNet.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"].</h2>

<form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" role="form">
    <h4>Use a local account to log in.</h4>
    <hr />
    <div asp-validation-summary="ValidationSummary.All"></div>
    <label asp-for="Email"></label>
    <input asp-for="Email" />
    <span asp-validation-for="Email"></span>
    <label asp-for="Password"></label>
    <input asp-for="Password" />
    <span asp-validation-for="Password"></span>
    <input asp-for="RememberMe" />
    <label asp-for="RememberMe"></label>
    <button type="submit">Log in</button>
    <p>
        <a asp-action="Register">Register as a new user?</a>
    </p>
    <p>
        <a asp-action="ForgotPassword">Forgot your password?</a>
    </p>
</form>
<section>
    <h4>Use another service to log in.</h4>
    <hr />
    @{
        var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
        if (loginProviders.Count == 0)
        {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
        }
        else
        {
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
                <div>
                    <p>
                        @foreach (var provider in loginProviders)
                        {
                            <button type="submit" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                        }
                    </p>
                </div>
            </form>
        }
    }
</section>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
